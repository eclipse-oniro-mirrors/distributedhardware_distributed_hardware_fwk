# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../distributed_av_transport.gni")

module_out_path = "distributed_hardware_fwk/distributed_hardware_fwk/av_trans_control_center_test"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "./inner_kits",
    "./services",
    "${common_path}/include",
    "${dh_fwk_utils_path}/include",
    "${interface_path}/",
    "${dh_fwk_sdk_path}/include",
    "${engine_path}/av_receiver/include",
    "${engine_path}/av_sender/include",
    "${engine_path}/filters/av_transport_input",
    "${distributedhardwarefwk_path}/utils/include/eventbus",
    "${control_center_path}/inner_kits/include",
    "${control_center_path}/services/include",
    "${control_center_path}/services/include/ipc",
  ]
}

## UnitTest av_trans_control_center_test
ohos_unittest("AvTransControlCenterTest") {
  module_out_path = module_out_path

  sources = [
    "${control_center_path}/test/unittest/inner_kits/av_trans_control_center_callback_stub_test.cpp",
    "${control_center_path}/test/unittest/inner_kits/av_trans_control_center_callback_test.cpp",
    "${control_center_path}/test/unittest/services/av_sync_manager_test.cpp",
    "${control_center_path}/test/unittest/services/av_trans_control_center_test.cpp",
  ]

  configs = [ ":module_private_config" ]
  deps = [
    "${dh_fwk_sdk_path}:libdhfwk_sdk",
    "${dh_fwk_services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
  ]

  if (histreamer_compile_part) {
    external_deps = [
      "media_foundation:histreamer_base",
      "media_foundation:histreamer_codec_filters",
      "media_foundation:histreamer_ffmpeg_convert",
      "media_foundation:histreamer_plugin_base",
    ]
  }

  external_deps += [
    "bounds_checking_function:libsec_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "dsoftbus:softbus_client",
    "ipc:ipc_core",
  ]

  cflags = [
    "-O2",
    "-fPIC",
    "-Wall",
    "-frtti",
    "-fexceptions",
    "-Dprivate=public",
  ]
  cflags_cc = cflags
  part_name = "distributed_hardware_fwk"
  subsystem_name = "distributedhardware"
}
