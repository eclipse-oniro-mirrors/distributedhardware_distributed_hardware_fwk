# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../distributedhardwarefwk.gni")

module_out_path = unittest_output_path

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${utils_path}/include",
    "${services_path}/distributedhardwarefwkservice/include",
    "${services_path}/distributedhardwarefwkservice/include/resourcemanager",
    "${services_path}/distributedhardwarefwkservice/include/transport",
    "${services_path}/distributedhardwarefwkservice/include/utils",
    "${common_path}/utils/include",
    "${common_path}/log/include",
  ]
}

ohos_unittest("DhCommToolTest") {
  module_out_path = module_out_path

  sources = [
    "dh_comm_tool_test.cpp",
    "mock_other_method.cpp",
  ]

  configs = [ ":module_private_config" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
  ]

  deps = [
    "${services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
    "${utils_path}:distributedhardwareutils",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gmock_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (dhfwk_os_account) {
    external_deps += [
      "os_account:libaccountkits",
      "os_account:os_account_innerkits",
    ]
  }

  if (dhfwk_os_account) {
    defines = [ "OS_ACCOUNT_PART" ]
  }
}

ohos_unittest("DhTransportObjTest") {
  module_out_path = module_out_path

  sources = [ "dh_transport_obj_test.cpp" ]

  configs = [ ":module_private_config" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
  ]

  deps = [
    "${services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
    "${utils_path}:distributedhardwareutils",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gmock_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("DhTransportTest") {
  module_out_path = module_out_path

  sources = [
    "dh_transport_test.cpp",
    "mock_other_method.cpp",
  ]

  configs = [ ":module_private_config" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
  ]

  deps = [
    "${services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
    "${utils_path}:distributedhardwareutils",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gmock_main",
    "hilog:libhilog",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (dhfwk_os_account) {
    external_deps += [
      "os_account:libaccountkits",
      "os_account:os_account_innerkits",
    ]
  }

  if (dhfwk_os_account) {
    defines = [ "OS_ACCOUNT_PART" ]
  }
}

group("transport_test") {
  testonly = true
  deps = [
    ":DhCommToolTest",
    ":DhTransportObjTest",
    ":DhTransportTest",
  ]
}
