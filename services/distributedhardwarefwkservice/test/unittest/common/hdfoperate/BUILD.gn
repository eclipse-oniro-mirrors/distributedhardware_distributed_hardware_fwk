# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../distributedhardwarefwk.gni")

module_out_path = unittest_output_path

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${av_trans_path}/common/include",
    "${innerkits_path}/include",
    "${utils_path}/include",
    "${utils_path}/include/log",
    "${utils_path}/include/eventbus",
    "${common_path}/log/include",
    "${common_path}/utils/include",
    "${services_path}/distributedhardwarefwkservice/include",
    "${services_path}/distributedhardwarefwkservice/include/hdfoperate",
  ]
}

ohos_unittest("DaudioHdfOperateTest") {
  module_out_path = module_out_path

  sources = [
    "daudio_hdf_operate_test.cpp",
    "mock_hdfoperate_device_manager.cpp"
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DaudioHdfOperateTest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "drivers_interface_distributed_audio:libdaudioext_proxy_2.0",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gmock_main",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdi",
    "hdf_core:libpub_utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]
}

ohos_unittest("DcameraHdfOperateTest") {
  module_out_path = module_out_path

  sources = [
    "dcamera_hdf_operate_test.cpp",
    "mock_hdfoperate_device_manager.cpp"
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${services_path}/distributedhardwarefwkservice:distributedhardwarefwksvr",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DcameraHdfOperateTest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "drivers_interface_distributed_camera:libdistributed_camera_provider_proxy_1.1",
    "eventhandler:libeventhandler",
    "googletest:gmock",
    "googletest:gmock_main",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdi",
    "hdf_core:libpub_utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]
}

group("hdf_operate_test") {
  testonly = true
  deps = [
    ":DaudioHdfOperateTest",
    ":DcameraHdfOperateTest",
  ]
}
